const API_URL = process.env.WORDPRESS_API_URL;

const fetchAPI = async (query = "", variables = {}) => {
  const response = await fetch(API_URL as string, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      query,
      variables,
    }),
  }).then((response) => response.json());

  if (response.errors) {
    console.log(response.errors);
    throw new Error("Failed to fetch API");
  }
  return response.data;
};

export const getPostBySlug = async (slug: string) => {
  const variables = {
    slug,
  };

  const query: string = `
    query getPostBySlug($slug: ID!) {
      post (idType: SLUG, id: $slug) {
        slug
        title(format: RENDERED)
        date
        content(format: RENDERED)
        featuredImage {
          node {
            sourceUrl
            mediaDetails {
              height
              width
            }
          }
        }
        categories {
          nodes {
            name
            slug
          }
        }
      }
    }
  `;

  try {
    type ContentType = {
      title: string;
      slug: string;
      publishDate: string;
      content: string;
      categories: string;
      eyecatch?: {
        url: string;
        height: number;
        width: number;
      };
    };

    const response = await fetchAPI(query, variables);

    const content: ContentType = {
      title: response.post.title,
      slug: response.post.slug,
      publishDate: response.post.date,
      content: response.post.content,
      categories: response.post.categories.nodes,
    };

    if (response.post.featuredImage) {
      content.eyecatch = {
        url: response.post.featuredImage.node.sourceUrl,
        height: response.post.featuredImage.node.mediaDetails.height,
        width: response.post.featuredImage.node.mediaDetails.width,
      };
    }
    return content;
  } catch (err) {
    console.log("--getPostBySlug");
    console.log(err);
  }
};

export const getAllSlugs = async (limit: number = 100) => {
  const variables = {
    limit,
  };

  const query: string = `
    query getAllSlugs($limit: Int!) {
      posts(first: $limit) {
        nodes {
          title
          slug
        }
      }
    }
  `;

  try {
    type ContentType = {
      title: string;
      slug: string;
    };

    const response = await fetchAPI(query, variables);
    const contents: ContentType = response.posts.nodes;

    return contents;
  } catch (err) {
    console.log("--getAllSlugs--");
    console.log(err);
  }
};

export const getAllPosts = async (limit: number = 100) => {
  const variables = {
    limit,
  };

  const query: string = `
    query getAllSlugs($limit: Int!) {
      posts(first: $limit) {
        nodes {
          title
          slug
          featuredImage {
            node {
              sourceUrl
              mediaDetails {
                height
                width
              }
            }
          }
        }
      }
    }
  `;

  try {
    type ContentType = {
      title: string;
      slug: string;
      eyecatch?: {
        url: string;
        height: number;
        width: number;
      };
    };

    type NodeType = {
      title: string,
      slug: string,
      featuredImage: {
        node: {
          sourceUrl: string,
          mediaDetails: {
            height: number,
            width: number,
          }
        }
      }
    }

    const response = await fetchAPI(query, variables);

    const contents = response.posts.nodes.map((node: NodeType) => {
      const content: ContentType = {
        title: node.title,
        slug: node.slug,
      };

      if (node.featuredImage) {
        content.eyecatch = {
          url: node.featuredImage.node.sourceUrl,
          height: node.featuredImage.node.mediaDetails.height,
          width: node.featuredImage.node.mediaDetails.width,
        };
      }
      return content;
    });

    return contents;
  } catch (err) {
    console.log("--getAllPosts--");
    console.log(err);
  }
};

export const getAllCategories = async (limit: number = 100) => {
  const variables = {
    limit,
  };

  const query: string = `
    query getAllCategories($limit: Int!) {
      categories(first: $limit) {
        nodes {
          name
          slug
        }
      }
    }
  `;

  try {
    type ContentType = {
      slug: string;
      name: string;
      id: string;
    };

    type NodeType = {
      name: string,
      slug: string,
    }

    const response = await fetchAPI(query, variables);

    const contents = response.categories.nodes.map((node: NodeType) => {
      const content: ContentType = {
        name: node.name,
        id: node.slug,
        slug: node.slug,
      };
      return content;
    });
    return contents;
  } catch (err) {
    console.log("--getAllCategories--");
    console.log(err);
  }
};

export const getAllPostsByCategory = async (
  catID: string,
  limit: number = 100
) => {
  const variables = {
    id: catID,
    limit,
  };

  const query: string = `
    query getAllPostsByCategory($id: ID!, $limit: Int!) {
      category(id: $id, idType: SLUG) {
        posts(first: $limit) {
          nodes {
            slug
            title
            featuredImage {
              node {
                sourceUrl
                mediaDetails {
                  width
                  height
                }
              }
            }
          }
        }
      }
    }
  `;

  try {
    type ContentType = {
      title: string;
      slug: string;
      eyecatch?: {
        url: string;
        height: number;
        width: number;
      };
    };

    type NodeType = {
      slug: string;
      title: string;
      featuredImage: {
        node: {
          sourceUrl: string;
          mediaDetails: {
            width: number;
            height: number;
          };
        };
      };
    };

    const response = await fetchAPI(query, variables);

    const contents = response.category.posts.nodes.map((node: NodeType) => {
      const content: ContentType = {
        title: node.title,
        slug: node.slug,
      };

      if (node.featuredImage) {
        content.eyecatch = {
          url: node.featuredImage.node.sourceUrl,
          height: node.featuredImage.node.mediaDetails.height,
          width: node.featuredImage.node.mediaDetails.width,
        };
      }
      return content;
    });
    return contents;
  } catch (err) {
    console.log("--getAllPostsByCategory--");
    console.log(err);
  }
};


